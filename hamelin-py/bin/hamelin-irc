#!/usr/bin/env python
"""
Usage:
    hamelin-irc <host> <port> <nickname> [-c channel]...
                <prefix> <command> [<args>|-a args]...

Options:
  -c channel      An IRC channel to join.
  -a args         Arguments for <command>. This syntax
                  can solve problems with dashes.
"""
from lib.docopt import docopt
from lib import pyrcb
import hamelin
import socket


class IrcDaemon(hamelin.daemon):
    def __init__(self, args, prefix):
        hamelin.daemon.__init__(self, args)
        self.hamelin_servers = {}
        self.prefix = prefix + " "
        self.bot = pyrcb.IrcBot()
        self.bot.on_message = self.on_irc_message

    def start(self, host, port, nickname, channels):
        try:
            self.bot.connect(host, port)
            self.bot.register(nickname)
            for channel in channels:
                self.bot.join(channel)
            self.bot.listen()
            print("Lost connection to IRC server. Killing servers.")
        except socket.error:
            print("Error communicating with IRC server. Killing servers.")

        for key, serv in self.hamelin_servers.iteritems():
            serv.serv.kill()

    def update_servers(self):
        self.hamelin_servers = {k: v for (k, v) in
            self.hamelin_servers.iteritems() if v.serv.alive}

    def get_server(self, key):
        if key not in self.hamelin_servers:
            serv = self.create_server({
                "H-VERSION": "HAMELIN.PY-IRC-0.1",
                "H-TYPE": "IRC-0.1",
                "H-CLIENT": key
            })
            hamelin_serv = self.HamelinIrcServ(serv, self.bot, key)
            self.hamelin_servers[key] = hamelin_serv
        return self.hamelin_servers[key]

    def on_irc_message(self, message, nickname, target, is_query):
        if message != self.prefix and not message.startswith(self.prefix):
            return

        # If only the prefix is received, start the server
        # but don't send anything to stdin.
        self.update_servers()
        if message == self.prefix:
            self.get_server(target.lower())
        else:
            serv = self.get_server(target.lower())
            serv.on_irc_message(message[len(self.prefix):])

    class HamelinIrcServ:
        def __init__(self, serv, bot, target):
            self.serv = serv
            self.bot = bot
            self.target = target
            self.serv.handle_data = self.on_hamelin_message
            self.serv.startup()

        def on_irc_message(self, message):
            self.serv.send(message + "\n")

        def on_hamelin_message(self, message):
            self.bot.send(self.target, message[:-1])


def main():
    args = docopt(__doc__, version="0.1")
    command = [args["<command>"]] + args["--args"] + args["<args>"]
    prefix = args["<prefix>"]
    host = args["<host>"]
    port = int(args["<port>"])
    nickname = args["<nickname>"]
    channels = args["-c"]
    IrcDaemon(command, prefix).start(host, port, nickname, channels)

if __name__ == "__main__":
    main()
